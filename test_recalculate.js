// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø–µ—Ä–µ—Å—á–µ—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
// –í—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ—Å—á–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—É—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —á–µ—Ä–µ–∑ Supabase –∫–ª–∏–µ–Ω—Ç
async function testRecalculate() {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ supabase –∏–∑ window, –µ—Å–ª–∏ –æ–Ω —Ç–∞–º –µ—Å—Ç—å
    const supabase = window.supabase || (window as any).__SUPABASE__;
    
    if (!supabase) {
      console.error('‚ùå Supabase –∫–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ window');
      console.log('üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º Supabase');
      return;
    }
    
    console.log('‚úÖ Supabase –∫–ª–∏–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É:');
    const { data: currentStats, error: statsError } = await supabase
      .from('monthly_stats')
      .select('*')
      .eq('family_id', 1)
      .order('year', { ascending: false })
      .order('month', { ascending: false });
    
    if (statsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', statsError);
    } else {
      console.log('üìä –¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', currentStats);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ–∫–∏
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ–∫–∏:');
    const { data: receipts, error: receiptsError } = await supabase
      .from('receipts')
      .select('id, date, total_amount, items_count')
      .eq('family_id', 1)
      .order('date', { ascending: false });
    
    if (receiptsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —á–µ–∫–æ–≤:', receiptsError);
    } else {
      console.log(`üßæ –ù–∞–π–¥–µ–Ω–æ —á–µ–∫–æ–≤: ${receipts?.length || 0}`);
      receipts?.forEach((r: any) => {
        console.log(`  - ${r.date}: $${r.total_amount} (${r.items_count} —Ç–æ–≤–∞—Ä–æ–≤)`);
      });
    }
    
    // –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å RPC —Ñ—É–Ω–∫—Ü–∏—é
    console.log('\n3Ô∏è‚É£ –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å RPC —Ñ—É–Ω–∫—Ü–∏—é:');
    try {
      const { data: rpcData, error: rpcError } = await supabase.rpc('recalculate_monthly_stats', {
        p_family_id: 1,
        p_month: '10',
        p_year: 2024
      });
      
      if (rpcError) {
        console.warn('‚ö†Ô∏è RPC —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:', rpcError.message);
        console.log('üí° –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥...');
      } else {
        console.log('‚úÖ RPC —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç');
      }
    } catch (rpcException: any) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ RPC (–≤–æ–∑–º–æ–∂–Ω–æ —Å–µ—Ç—å):', rpcException?.message || rpcException);
      console.log('üí° –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥
    console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –ø–µ—Ä–µ—Å—á–µ—Ç–∞:');
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ –æ–∫—Ç—è–±—Ä—å 2024
    const { data: octoberReceipts, error: octReceiptsError } = await supabase
      .from('receipts')
      .select('total_amount')
      .eq('family_id', 1)
      .gte('date', '2024-10-01')
      .lt('date', '2024-11-01');
    
    const { data: octoberHistory, error: octHistoryError } = await supabase
      .from('product_history')
      .select(`
        quantity,
        products(calories)
      `)
      .eq('family_id', 1)
      .gte('date', '2024-10-01')
      .lt('date', '2024-11-01');
    
    if (octReceiptsError || octHistoryError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', octReceiptsError || octHistoryError);
    } else {
      const totalSpent = octoberReceipts?.reduce((sum: number, r: any) => sum + (r.total_amount || 0), 0) || 0;
      const totalCalories = octoberHistory?.reduce((sum: number, h: any) => {
        const calories = h.products?.calories || 0;
        const quantity = h.quantity || 0;
        return sum + (calories * quantity);
      }, 0) || 0;
      
      console.log('üìä –í—ã—á–∏—Å–ª–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –æ–∫—Ç—è–±—Ä—å:');
      console.log(`  üí∞ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ: $${totalSpent}`);
      console.log(`  üî• –ö–∞–ª–æ—Ä–∏–∏: ${totalCalories}`);
      console.log(`  üìÖ –°—Ä–µ–¥–Ω–µ–µ –≤ –¥–µ–Ω—å: ${Math.round(totalCalories / 31)} –∫–∫–∞–ª`);
      console.log(`  üßæ –ß–µ–∫–æ–≤: ${octoberReceipts?.length || 0}`);
    }
    
    console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
    console.log('üí° –¢–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û–±–Ω–æ–≤–∏—Ç—å" –≤ –¥–∞—à–±–æ—Ä–¥–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
    console.log('üí° –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ–ª–∂–Ω–∞ –ø–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥');
    
  } catch (error: any) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testRecalculate();
