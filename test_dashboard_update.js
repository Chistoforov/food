// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞
// –í—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—É—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
async function checkCurrentStats() {
  try {
    const { data: stats, error } = await supabase
      .from('monthly_stats')
      .select('*')
      .eq('family_id', 1)
      .order('year', { ascending: false })
      .order('month', { ascending: false });
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
      return;
    }
    
    console.log('üìä –¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    stats.forEach(stat => {
      console.log(`${stat.year}-${stat.month}: $${stat.total_spent}, ${stat.total_calories} –∫–∞–ª–æ—Ä–∏–π, ${stat.receipts_count} —á–µ–∫–æ–≤`);
    });
    
    return stats;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —á–µ–∫–∞
async function addTestReceipt() {
  console.log('‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —á–µ–∫...');
  
  try {
    // –°–æ–∑–¥–∞–µ–º —á–µ–∫
    const { data: receipt, error: receiptError } = await supabase
      .from('receipts')
      .insert({
        family_id: 1,
        date: '2024-11-02',
        items_count: 2,
        total_amount: 8.50,
        status: 'processed'
      })
      .select()
      .single();
    
    if (receiptError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–∫–∞:', receiptError);
      return;
    }
    
    console.log('‚úÖ –ß–µ–∫ —Å–æ–∑–¥–∞–Ω:', receipt.id);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –∏—Å—Ç–æ—Ä–∏—é
    const { error: historyError } = await supabase
      .from('product_history')
      .insert([
        {
          product_id: 5, // –Ø–±–ª–æ–∫–∏
          family_id: 1,
          date: '2024-11-02',
          quantity: 1,
          price: 2.50,
          unit_price: 2.50
        },
        {
          product_id: 6, // –ë–∞–Ω–∞–Ω—ã
          family_id: 1,
          date: '2024-11-02',
          quantity: 2,
          price: 3.60,
          unit_price: 1.80
        }
      ]);
    
    if (historyError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏:', historyError);
      return;
    }
    
    console.log('‚úÖ –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∞');
    
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('üîÑ –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...');
    const { error: recalcError } = await supabase.rpc('recalculate_monthly_stats', {
      p_family_id: 1,
      p_month: '11',
      p_year: 2024
    });
    
    if (recalcError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—á–µ—Ç–∞:', recalcError);
    } else {
      console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω–∞');
    }
    
    return receipt.id;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–µ–∫–∞:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —á–µ–∫–∞
async function deleteTestReceipt(receiptId) {
  console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —á–µ–∫...');
  
  try {
    const { error } = await supabase
      .from('receipts')
      .delete()
      .eq('id', receiptId);
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —á–µ–∫–∞:', error);
      return;
    }
    
    console.log('‚úÖ –ß–µ–∫ —É–¥–∞–ª–µ–Ω');
    
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('üîÑ –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...');
    const { error: recalcError } = await supabase.rpc('recalculate_monthly_stats', {
      p_family_id: 1,
      p_month: '11',
      p_year: 2024
    });
    
    if (recalcError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—á–µ—Ç–∞:', recalcError);
    } else {
      console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω–∞');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —á–µ–∫–∞:', error);
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function testDashboardUpdate() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  console.log('\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É:');
  await checkCurrentStats();
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —á–µ–∫
  console.log('\n2Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —á–µ–∫:');
  const receiptId = await addTestReceipt();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
  console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:');
  await checkCurrentStats();
  
  // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —á–µ–∫
  if (receiptId) {
    console.log('\n4Ô∏è‚É£ –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —á–µ–∫:');
    await deleteTestReceipt(receiptId);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
    console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è:');
    await checkCurrentStats();
  }
  
  console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log('üí° –¢–µ–ø–µ—Ä—å –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –¥–∞—à–±–æ—Ä–¥–µ');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
testDashboardUpdate();
