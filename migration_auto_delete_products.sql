-- –ú–∏–≥—Ä–∞—Ü–∏—è: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —á–µ–∫–æ–≤
-- –û–ø–∏—Å–∞–Ω–∏–µ: –ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —á–µ–∫–∞ —É–¥–∞–ª—è—é—Ç—Å—è –≤—Å–µ –∑–∞–ø–∏—Å–∏ product_history (CASCADE —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
--           –∏ —Ç–æ–≤–∞—Ä—ã, —É –∫–æ—Ç–æ—Ä—ã—Ö –±–æ–ª—å—à–µ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∫—É–ø–æ–∫

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∫—É–ø–æ–∫
CREATE OR REPLACE FUNCTION delete_products_without_history()
RETURNS TRIGGER AS $$
DECLARE
    v_product_id INTEGER;
    v_history_count INTEGER;
BEGIN
    -- –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –ø—Ä–æ–¥—É–∫—Ç–∞–º –∏–∑ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π product_history
    FOR v_product_id IN 
        SELECT DISTINCT product_id 
        FROM OLD_TABLE
    LOOP
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞–ª–∞—Å—å –ª–∏ –∏—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫ –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
        SELECT COUNT(*) INTO v_history_count
        FROM product_history
        WHERE product_id = v_product_id;
        
        -- –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å, —É–¥–∞–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç
        IF v_history_count = 0 THEN
            DELETE FROM products WHERE id = v_product_id;
            RAISE NOTICE '–£–¥–∞–ª–µ–Ω –ø—Ä–æ–¥—É–∫—Ç #% (–±–æ–ª—å—à–µ –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∫—É–ø–æ–∫)', v_product_id;
        END IF;
    END LOOP;
    
    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

-- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ç—Ä–∏–≥–≥–µ—Ä, –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
DROP TRIGGER IF EXISTS cleanup_products_after_history_delete ON product_history;

-- –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä AFTER DELETE –Ω–∞ product_history
-- –ò—Å–ø–æ–ª—å–∑—É–µ–º REFERENCING OLD TABLE –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫–æ –≤—Å–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–º —Å—Ç—Ä–æ–∫–∞–º
CREATE TRIGGER cleanup_products_after_history_delete
    AFTER DELETE ON product_history
    REFERENCING OLD TABLE AS OLD_TABLE
    FOR EACH STATEMENT
    EXECUTE FUNCTION delete_products_without_history();

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Å—á–µ—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —á–µ–∫–∞
CREATE OR REPLACE FUNCTION recalculate_stats_after_receipt_delete()
RETURNS TRIGGER AS $$
DECLARE
    v_year INTEGER;
    v_month VARCHAR(10);
BEGIN
    -- –ü–æ–ª—É—á–∞–µ–º –≥–æ–¥ –∏ –º–µ—Å—è—Ü —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —á–µ–∫–∞
    v_year := EXTRACT(YEAR FROM OLD.date);
    v_month := LPAD(EXTRACT(MONTH FROM OLD.date)::TEXT, 2, '0');
    
    -- –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –º–µ—Å—è—Ü–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —á–µ–∫–∞
    PERFORM recalculate_monthly_stats(OLD.family_id, v_month, v_year);
    
    RAISE NOTICE '–ü–µ—Ä–µ—Å—á–∏—Ç–∞–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ %-% –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —á–µ–∫–∞ #%', v_year, v_month, OLD.id;
    
    RETURN OLD;
END;
$$ LANGUAGE plpgsql;

-- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ç—Ä–∏–≥–≥–µ—Ä, –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
DROP TRIGGER IF EXISTS recalculate_stats_on_receipt_delete ON receipts;

-- –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è –ø–µ—Ä–µ—Å—á–µ—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —á–µ–∫–∞
CREATE TRIGGER recalculate_stats_on_receipt_delete
    AFTER DELETE ON receipts
    FOR EACH ROW
    EXECUTE FUNCTION recalculate_stats_after_receipt_delete();

-- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã
COMMENT ON FUNCTION delete_products_without_history() IS 
'–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ—Ç —Ç–æ–≤–∞—Ä—ã, —É –∫–æ—Ç–æ—Ä—ã—Ö –±–æ–ª—å—à–µ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∫—É–ø–æ–∫ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —á–µ–∫–∞';

COMMENT ON FUNCTION recalculate_stats_after_receipt_delete() IS 
'–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ—Ç –º–µ—Å—è—á–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —á–µ–∫–∞';

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ CASCADE –≤ product_history (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ)
-- –ï—Å–ª–∏ –Ω–µ—Ç, —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏:

-- ALTER TABLE product_history 
-- DROP CONSTRAINT IF EXISTS product_history_receipt_id_fkey;

-- ALTER TABLE product_history
-- ADD CONSTRAINT product_history_receipt_id_fkey
-- FOREIGN KEY (receipt_id) REFERENCES receipts(id) ON DELETE CASCADE;

-- –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
DO $$
BEGIN
    RAISE NOTICE '‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!';
    RAISE NOTICE 'üìù –¢–µ–ø–µ—Ä—å –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —á–µ–∫–∞:';
    RAISE NOTICE '   1. –£–¥–∞–ª—è—é—Ç—Å—è –∑–∞–ø–∏—Å–∏ –∏–∑ product_history (CASCADE)';
    RAISE NOTICE '   2. –£–¥–∞–ª—è—é—Ç—Å—è —Ç–æ–≤–∞—Ä—ã –±–µ–∑ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∫—É–ø–æ–∫ (—Ç—Ä–∏–≥–≥–µ—Ä)';
    RAISE NOTICE '   3. –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü (—Ç—Ä–∏–≥–≥–µ—Ä)';
END $$;

