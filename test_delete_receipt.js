/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —á–µ–∫–æ–≤
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * 1. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)
 * 2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥
 * 3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ testDeleteReceipt()
 */

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º supabase –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
async function testDeleteReceipt() {
    console.log('üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —á–µ–∫–∞...');
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
    const SUPABASE_ANON_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;
    
    console.log('üì° Supabase URL:', SUPABASE_URL);
    console.log('üîë Supabase Key:', SUPABASE_ANON_KEY ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚úÖ' : '–ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚ùå');
    
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
    const { createClient } = await import('@supabase/supabase-js');
    const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
    
    // 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–µ–∫–æ–≤
    console.log('\nüìã –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–µ–∫–æ–≤...');
    const { data: receipts, error: fetchError } = await supabase
        .from('receipts')
        .select('*')
        .eq('family_id', 1)
        .order('date', { ascending: false });
    
    if (fetchError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —á–µ–∫–æ–≤:', fetchError);
        return;
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —á–µ–∫–æ–≤: ${receipts?.length || 0}`);
    if (receipts && receipts.length > 0) {
        console.table(receipts.map(r => ({
            id: r.id,
            date: r.date,
            items: r.items_count,
            total: r.total_amount
        })));
    }
    
    if (!receipts || receipts.length === 0) {
        console.log('‚ö†Ô∏è –ù–µ—Ç —á–µ–∫–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è. –°–æ–∑–¥–∞–π—Ç–µ —á–µ–∫ —Å–Ω–∞—á–∞–ª–∞.');
        return;
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º RLS –ø–æ–ª–∏—Ç–∏–∫–∏
    console.log('\nüîí –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º RLS –ø–æ–ª–∏—Ç–∏–∫–∏...');
    const { data: policies, error: policiesError } = await supabase
        .rpc('exec_sql', {
            sql: `
                SELECT tablename, policyname, cmd
                FROM pg_policies 
                WHERE schemaname = 'public' 
                AND tablename IN ('receipts', 'product_history')
                ORDER BY tablename, policyname
            `
        })
        .catch(() => {
            console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª–∏—Ç–∏–∫–∏ —á–µ—Ä–µ–∑ RPC. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ä—É—á–Ω—É—é –≤ Supabase Dashboard.');
            return { data: null, error: null };
        });
    
    if (policies && policies.length > 0) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω—ã RLS –ø–æ–ª–∏—Ç–∏–∫–∏:');
        console.table(policies);
    } else {
        console.log('‚ùå RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏');
        console.log('   –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏—á–∏–Ω–æ–π –ø—Ä–æ–±–ª–µ–º—ã —Å —É–¥–∞–ª–µ–Ω–∏–µ–º!');
        console.log('   –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ —Ñ–∞–π–ª–∞ setup_rls_policies.sql');
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è receipt_id –≤ product_history
    console.log('\nüîó –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑—å product_history -> receipts...');
    const { data: historyWithReceipt, error: historyError } = await supabase
        .from('product_history')
        .select('id, receipt_id, date')
        .limit(1);
    
    if (historyError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ product_history:', historyError);
    } else if (historyWithReceipt && historyWithReceipt.length > 0) {
        if (historyWithReceipt[0].receipt_id !== undefined) {
            console.log('‚úÖ –ü–æ–ª–µ receipt_id —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ product_history');
        } else {
            console.log('‚ùå –ü–æ–ª–µ receipt_id –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ product_history');
            console.log('   –í—ã–ø–æ–ª–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏—é –∏–∑ —Ñ–∞–π–ª–∞ migration_add_receipt_id.sql');
        }
    }
    
    // 4. –ü—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å –ø–µ—Ä–≤—ã–π —á–µ–∫
    const receiptToDelete = receipts[0];
    console.log(`\nüóëÔ∏è –®–∞–≥ 4: –ü—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å —á–µ–∫ #${receiptToDelete.id}...`);
    console.log('   –î–∞—Ç–∞:', receiptToDelete.date);
    console.log('   –°—É–º–º–∞:', receiptToDelete.total_amount);
    
    const confirmDelete = confirm(
        `–£–¥–∞–ª–∏—Ç—å —á–µ–∫ –æ—Ç ${receiptToDelete.date} –Ω–∞ —Å—É–º–º—É ‚Ç¨${receiptToDelete.total_amount}?`
    );
    
    if (!confirmDelete) {
        console.log('‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
        return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ product_history
    const { data: relatedHistory, error: relatedError } = await supabase
        .from('product_history')
        .select('id')
        .eq('receipt_id', receiptToDelete.id);
    
    if (!relatedError && relatedHistory) {
        console.log(`   –°–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π product_history: ${relatedHistory.length}`);
    }
    
    // –£–¥–∞–ª—è–µ–º —á–µ–∫
    const { error: deleteError } = await supabase
        .from('receipts')
        .delete()
        .eq('id', receiptToDelete.id);
    
    if (deleteError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —á–µ–∫–∞:', deleteError);
        console.log('\nüìù –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
        console.log('   1. –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è DELETE');
        console.log('   2. –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ');
        console.log('   3. –ü—Ä–æ–±–ª–µ–º–∞ —Å CASCADE —É–¥–∞–ª–µ–Ω–∏–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π');
        console.log('\nüí° –†–µ—à–µ–Ω–∏–µ:');
        console.log('   –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL-—Å–∫—Ä–∏–ø—Ç –∏–∑ —Ñ–∞–π–ª–∞ setup_rls_policies.sql');
        return;
    }
    
    console.log('‚úÖ –ß–µ–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!');
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —á–µ–∫ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω
    console.log('\n‚úì –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —á–µ–∫ —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã...');
    const { data: checkReceipt, error: checkError } = await supabase
        .from('receipts')
        .select('id')
        .eq('id', receiptToDelete.id)
        .single();
    
    if (checkError || !checkReceipt) {
        console.log('‚úÖ –ß–µ–∫ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!');
    } else {
        console.log('‚ùå –ß–µ–∫ –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!');
        console.log('   –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ –Ω–∞ —É—Ä–æ–≤–Ω–µ –ë–î');
        console.log('   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –≤ Supabase Dashboard');
    }
    
    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —Ç–æ–∂–µ —É–¥–∞–ª–µ–Ω—ã
    if (relatedHistory && relatedHistory.length > 0) {
        console.log('\nüîó –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π...');
        const { data: checkHistory, error: checkHistoryError } = await supabase
            .from('product_history')
            .select('id')
            .eq('receipt_id', receiptToDelete.id);
        
        if (!checkHistoryError) {
            if (checkHistory && checkHistory.length === 0) {
                console.log('‚úÖ –í—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ product_history —É–¥–∞–ª–µ–Ω—ã (CASCADE —Ä–∞–±–æ—Ç–∞–µ—Ç)');
            } else {
                console.log(`‚ö†Ô∏è –û—Å—Ç–∞–ª–æ—Å—å ${checkHistory?.length || 0} –∑–∞–ø–∏—Å–µ–π product_history`);
                console.log('   CASCADE –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
            }
        }
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('\nüìä –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:');
    
    const allGood = !deleteError && (!checkReceipt || checkError);
    
    if (allGood) {
        console.log('‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
        console.log('   –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ UI');
    } else {
        console.log('‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç');
        console.log('\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
        console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard');
        console.log('   2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ SQL Editor');
        console.log('   3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ —Ñ–∞–π–ª–∞ setup_rls_policies.sql');
        console.log('   4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–¥–∞–ª–∏—Ç—å —á–µ–∫ —Å–Ω–æ–≤–∞');
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏
window.testDeleteReceipt = testDeleteReceipt;

console.log('‚úÖ –°–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω!');
console.log('üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: testDeleteReceipt()');

