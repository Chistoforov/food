// –û—Ç–ª–∞–¥–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û–±–Ω–æ–≤–∏—Ç—å" –≤ –¥–∞—à–±–æ—Ä–¥–µ
// –í—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

console.log('üîç –û—Ç–ª–∞–¥–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û–±–Ω–æ–≤–∏—Ç—å"...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
function findUpdateButton() {
  // –ò—â–µ–º –∫–Ω–æ–ø–∫—É –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º
  const selectors = [
    'button[title="–ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"]',
    'button:contains("–û–±–Ω–æ–≤–∏—Ç—å")',
    'button:contains("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ")',
    'button[class*="update"]',
    'button[class*="refresh"]',
    'button[class*="recalculate"]'
  ];
  
  for (const selector of selectors) {
    try {
      const button = document.querySelector(selector);
      if (button) {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É: ${selector}`);
        return button;
      }
    } catch (e) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤
    }
  }
  
  // –ò—â–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É
  const allButtons = document.querySelectorAll('button');
  for (const button of allButtons) {
    const text = button.textContent?.toLowerCase() || '';
    if (text.includes('–æ–±–Ω–æ–≤–∏—Ç—å') || text.includes('–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ') || text.includes('–ø–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å')) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –ø–æ —Ç–µ–∫—Å—Ç—É: "${button.textContent}"`);
      return button;
    }
  }
  
  console.log('‚ùå –ö–Ω–æ–ø–∫–∞ "–û–±–Ω–æ–≤–∏—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  return null;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function checkButtonHandlers(button) {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–∫–∏...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º onclick
  if (button.onclick) {
    console.log('‚úÖ –ù–∞–π–¥–µ–Ω onclick –æ–±—Ä–∞–±–æ—Ç—á–∏–∫');
  } else {
    console.log('‚ö†Ô∏è onclick –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º addEventListener (—Å–ª–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–æ –ø–æ–ø—Ä–æ–±—É–µ–º)
  console.log('‚ÑπÔ∏è addEventListener –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–ª–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–∑–≤–Ω–µ');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º disabled —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  if (button.disabled) {
    console.log('‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞ (disabled)');
  } else {
    console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å
  const style = window.getComputedStyle(button);
  if (style.display === 'none' || style.visibility === 'hidden') {
    console.log('‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ —Å–∫—Ä—ã—Ç–∞');
  } else {
    console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –≤–∏–¥–∏–º–∞');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
async function forceUpdate() {
  console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
  
  try {
    // –ò—â–µ–º React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    const reactRoot = document.querySelector('#root') || document.querySelector('[data-reactroot]');
    if (reactRoot) {
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω React root');
      
      // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Ñ—É–Ω–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º scope
      if (window.recalculateStats) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è recalculateStats –≤ window');
        await window.recalculateStats();
        return;
      }
      
      // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —á–µ—Ä–µ–∑ React DevTools
      if (window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
        console.log('‚úÖ React DevTools –¥–æ—Å—Ç—É–ø–Ω—ã, –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç...');
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—É—é –ª–æ–≥–∏–∫—É –ø–æ–∏—Å–∫–∞
      }
    }
    
    // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∏ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —á–µ—Ä–µ–∑ eval (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)
    console.log('‚ö†Ô∏è –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Ñ—É–Ω–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...');
    
    // –ò—â–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º scope
    const globalKeys = Object.keys(window);
    const updateKeys = globalKeys.filter(key => 
      key.toLowerCase().includes('update') || 
      key.toLowerCase().includes('recalculate') ||
      key.toLowerCase().includes('refresh')
    );
    
    if (updateKeys.length > 0) {
      console.log('üîç –ù–∞–π–¥–µ–Ω—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', updateKeys);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏
function createTestButton() {
  console.log('üîß –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∫–Ω–æ–ø–∫—É...');
  
  const testDiv = document.createElement('div');
  testDiv.style.cssText = `
    position: fixed;
    top: 20px;
    right: 20px;
    background: white;
    border: 2px solid #007bff;
    border-radius: 8px;
    padding: 15px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    z-index: 10000;
    font-family: Arial, sans-serif;
    min-width: 200px;
  `;
  
  testDiv.innerHTML = `
    <h4 style="margin: 0 0 10px 0; color: #007bff;">–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</h4>
    <button id="test-update-btn" style="
      background: #007bff;
      color: white;
      border: none;
      padding: 8px 16px;
      border-radius: 4px;
      cursor: pointer;
      margin: 5px;
      width: 100%;
    ">–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É</button>
    <button id="test-force-btn" style="
      background: #28a745;
      color: white;
      border: none;
      padding: 8px 16px;
      border-radius: 4px;
      cursor: pointer;
      margin: 5px;
      width: 100%;
    ">–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ</button>
    <button id="test-close-btn" style="
      background: #dc3545;
      color: white;
      border: none;
      padding: 8px 16px;
      border-radius: 4px;
      cursor: pointer;
      margin: 5px;
      width: 100%;
    ">–ó–∞–∫—Ä—ã—Ç—å</button>
  `;
  
  document.body.appendChild(testDiv);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
  document.getElementById('test-update-btn')?.addEventListener('click', async () => {
    console.log('üîÑ –¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞: –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É');
    const button = findUpdateButton();
    if (button) {
      button.click();
    } else {
      console.log('‚ùå –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
  });
  
  document.getElementById('test-force-btn')?.addEventListener('click', async () => {
    console.log('üîÑ –¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ');
    await forceUpdate();
  });
  
  document.getElementById('test-close-btn')?.addEventListener('click', () => {
    testDiv.remove();
  });
  
  console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É');
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ª–∞–¥–∫–∏
async function debugUpdateButton() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ª–∞–¥–∫—É –∫–Ω–æ–ø–∫–∏ "–û–±–Ω–æ–≤–∏—Ç—å"...');
  
  // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  if (document.readyState !== 'complete') {
    console.log('‚è≥ –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
    await new Promise(resolve => {
      window.addEventListener('load', resolve);
    });
  }
  
  console.log('\n1Ô∏è‚É£ –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–û–±–Ω–æ–≤–∏—Ç—å":');
  const updateButton = findUpdateButton();
  
  if (updateButton) {
    console.log('\n2Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É:');
    checkButtonHandlers(updateButton);
    
    console.log('\n3Ô∏è‚É£ –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É:');
    try {
      updateButton.click();
      console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞');
      
      // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      setTimeout(() => {
        console.log('‚è∞ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...');
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ DOM –∏–ª–∏ –∫–æ–Ω—Å–æ–ª–∏
      }, 3000);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏:', error);
    }
  } else {
    console.log('\n2Ô∏è‚É£ –ö–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–∞–Ω–µ–ª—å:');
    createTestButton();
  }
  
  console.log('\n‚úÖ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  console.log('üí° –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:');
  console.log('   - –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É (F5)');
  console.log('   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Å–æ–ª—å –Ω–∞ –æ—à–∏–±–∫–∏');
  console.log('   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –ø–∞–Ω–µ–ª—å');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–ª–∞–¥–∫—É
debugUpdateButton();
