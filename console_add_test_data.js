// –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞
// –í—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL –∑–∞–ø—Ä–æ—Å–∞
async function executeSQL(sql) {
  try {
    const { data, error } = await supabase.rpc('exec_sql', { sql_query: sql });
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ SQL:', error);
      return false;
    }
    return true;
  } catch (err) {
    console.error('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ:', err);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
async function addTestData() {
  console.log('üìù –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã...');
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã
  const productsSQL = `
    INSERT INTO products (name, calories, price, family_id, status) VALUES
    ('–Ø–±–ª–æ–∫–∏', 52, 2.50, 1, 'ok'),
    ('–ë–∞–Ω–∞–Ω—ã', 89, 1.80, 1, 'ok'),
    ('–ú–æ—Ä–∫–æ–≤—å', 41, 1.20, 1, 'ok'),
    ('–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å', 77, 1.50, 1, 'ok'),
    ('–ü–æ–º–∏–¥–æ—Ä—ã', 18, 3.20, 1, 'ok'),
    ('–°—ã—Ä', 356, 4.50, 1, 'ok'),
    ('–ô–æ–≥—É—Ä—Ç', 59, 1.20, 1, 'ok'),
    ('–ö—É—Ä–∏—Ü–∞', 165, 6.50, 1, 'ok'),
    ('–Ø–π—Ü–∞', 155, 2.80, 1, 'ok'),
    ('–•–ª–µ–±', 1320, 1.25, 1, 'ok');
  `;
  
  await executeSQL(productsSQL);
  
  console.log('üßæ –î–æ–±–∞–≤–ª—è–µ–º —á–µ–∫–∏...');
  
  // –î–æ–±–∞–≤–ª—è–µ–º —á–µ–∫–∏
  const receiptsSQL = `
    INSERT INTO receipts (date, items_count, total_amount, status, family_id) VALUES
    ('2024-11-01', 4, 12.30, 'processed', 1),
    ('2024-10-28', 3, 8.50, 'processed', 1),
    ('2024-10-25', 5, 18.70, 'processed', 1),
    ('2024-10-22', 3, 7.80, 'processed', 1),
    ('2024-10-19', 4, 15.20, 'processed', 1);
  `;
  
  await executeSQL(receiptsSQL);
  
  console.log('üìä –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∫—É–ø–æ–∫...');
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∫—É–ø–æ–∫
  const historySQL = `
    -- –ß–µ–∫ 1 (2024-11-01)
    INSERT INTO product_history (product_id, date, quantity, price, unit_price, family_id) VALUES
    (5, '2024-11-01', 2, 5.00, 2.50, 1),
    (6, '2024-11-01', 3, 5.40, 1.80, 1),
    (7, '2024-11-01', 1, 1.20, 1.20, 1),
    (8, '2024-11-01', 1, 1.50, 1.50, 1);
    
    -- –ß–µ–∫ 2 (2024-10-28)
    INSERT INTO product_history (product_id, date, quantity, price, unit_price, family_id) VALUES
    (5, '2024-10-28', 1, 2.50, 2.50, 1),
    (9, '2024-10-28', 1, 3.20, 3.20, 1),
    (10, '2024-10-28', 1, 4.50, 4.50, 1);
    
    -- –ß–µ–∫ 3 (2024-10-25)
    INSERT INTO product_history (product_id, date, quantity, price, unit_price, family_id) VALUES
    (11, '2024-10-25', 1, 6.50, 6.50, 1),
    (7, '2024-10-25', 2, 2.40, 1.20, 1),
    (8, '2024-10-25', 3, 4.50, 1.50, 1),
    (9, '2024-10-25', 2, 6.40, 3.20, 1),
    (12, '2024-10-25', 1, 2.80, 2.80, 1);
    
    -- –ß–µ–∫ 4 (2024-10-22)
    INSERT INTO product_history (product_id, date, quantity, price, unit_price, family_id) VALUES
    (10, '2024-10-22', 1, 4.50, 4.50, 1),
    (13, '2024-10-22', 2, 2.40, 1.20, 1),
    (12, '2024-10-22', 1, 2.80, 2.80, 1);
    
    -- –ß–µ–∫ 5 (2024-10-19)
    INSERT INTO product_history (product_id, date, quantity, price, unit_price, family_id) VALUES
    (11, '2024-10-19', 1, 6.50, 6.50, 1),
    (5, '2024-10-19', 2, 5.00, 2.50, 1),
    (6, '2024-10-19', 1, 1.80, 1.80, 1),
    (14, '2024-10-19', 1, 1.25, 1.25, 1);
  `;
  
  await executeSQL(historySQL);
  
  console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–¥—É–∫—Ç–æ–≤...');
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  const updateStatsSQL = `
    UPDATE products SET 
      purchase_count = (
        SELECT COUNT(*) FROM product_history 
        WHERE product_id = products.id AND family_id = products.family_id
      ),
      last_purchase = (
        SELECT MAX(date) FROM product_history 
        WHERE product_id = products.id AND family_id = products.family_id
      )
    WHERE family_id = 1;
  `;
  
  await executeSQL(updateStatsSQL);
  
  console.log('üìà –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –º–µ—Å—è—á–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...');
  
  // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –º–µ—Å—è—á–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  await executeSQL('SELECT recalculate_monthly_stats(1, \'10\', 2024);');
  await executeSQL('SELECT recalculate_monthly_stats(1, \'11\', 2024);');
  
  console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  await checkResults();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
async function checkResults() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã
    const { data: products, error: productsError } = await supabase
      .from('products')
      .select('*')
      .eq('family_id', 1);
    
    if (productsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤:', productsError);
    } else {
      console.log(`üì¶ –í—Å–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ${products.length}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ–∫–∏
    const { data: receipts, error: receiptsError } = await supabase
      .from('receipts')
      .select('*')
      .eq('family_id', 1);
    
    if (receiptsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —á–µ–∫–æ–≤:', receiptsError);
    } else {
      console.log(`üßæ –í—Å–µ–≥–æ —á–µ–∫–æ–≤: ${receipts.length}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const { data: stats, error: statsError } = await supabase
      .from('monthly_stats')
      .select('*')
      .eq('family_id', 1);
    
    if (statsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', statsError);
    } else {
      console.log(`üìä –ó–∞–ø–∏—Å–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: ${stats.length}`);
      stats.forEach(stat => {
        console.log(`${stat.year}-${stat.month}: $${stat.total_spent}, ${stat.total_calories} –∫–∞–ª–æ—Ä–∏–π`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
addTestData();
