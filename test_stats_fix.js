// –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
import dotenv from 'dotenv';
import { createClient } from '@supabase/supabase-js';

dotenv.config({ path: '.env.local' });
const supabase = createClient(process.env.VITE_SUPABASE_URL, process.env.VITE_SUPABASE_ANON_KEY);

async function testStatsFix() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
  
  try {
    // –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–µ—Å—è—Ü–∞/–≥–æ–¥–∞
    console.log('\nüìä –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...');
    const { data: allStats, error: allError } = await supabase
      .from('monthly_stats')
      .select('*')
      .eq('family_id', 1)
      .order('month', { ascending: false });
      
    if (allError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', allError);
      return;
    }
    
    console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π:', allStats.length);
    allStats.forEach((stat, i) => {
      console.log(`  ${i+1}. ${stat.month} (–≥–æ–¥: ${stat.year}) - ‚Ç¨${stat.total_spent}`);
    });
    
    // –¢–µ—Å—Ç 2: –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –æ–∫—Ç—è–±—Ä—å 2025 (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—É—Å—Ç–æ)
    console.log('\nüìä –¢–µ—Å—Ç 2: –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –æ–∫—Ç—è–±—Ä—å 2025...');
    const { data: oct2025Stats, error: oct2025Error } = await supabase
      .from('monthly_stats')
      .select('*')
      .eq('family_id', 1)
      .eq('month', '2025-10');
      
    if (oct2025Error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ –æ–∫—Ç—è–±—Ä—å 2025:', oct2025Error);
      return;
    }
    
    console.log('‚úÖ –ó–∞–ø–∏—Å–µ–π –∑–∞ –æ–∫—Ç—è–±—Ä—å 2025:', oct2025Stats.length);
    if (oct2025Stats.length === 0) {
      console.log('‚ÑπÔ∏è  –≠—Ç–æ –æ–∂–∏–¥–∞–µ–º–æ - –¥–∞–Ω–Ω—ã—Ö –∑–∞ –æ–∫—Ç—è–±—Ä—å 2025 –Ω–µ—Ç');
    }
    
    // –¢–µ—Å—Ç 3: –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –¥–µ–∫–∞–±—Ä—å 2024 (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å)
    console.log('\nüìä –¢–µ—Å—Ç 3: –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –¥–µ–∫–∞–±—Ä—å 2024...');
    const { data: dec2024Stats, error: dec2024Error } = await supabase
      .from('monthly_stats')
      .select('*')
      .eq('family_id', 1)
      .eq('month', '2024-12');
      
    if (dec2024Error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ –¥–µ–∫–∞–±—Ä—å 2024:', dec2024Error);
      return;
    }
    
    console.log('‚úÖ –ó–∞–ø–∏—Å–µ–π –∑–∞ –¥–µ–∫–∞–±—Ä—å 2024:', dec2024Stats.length);
    if (dec2024Stats.length > 0) {
      console.log('‚ÑπÔ∏è  –î–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã:', dec2024Stats[0]);
    }
    
    // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ–∫–∏ –∑–∞ –æ–∫—Ç—è–±—Ä—å 2025
    console.log('\nüìä –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ–∫–∏ –∑–∞ –æ–∫—Ç—è–±—Ä—å 2025...');
    const { data: oct2025Receipts, error: oct2025ReceiptsError } = await supabase
      .from('receipts')
      .select('*')
      .eq('family_id', 1)
      .gte('date', '2025-10-01')
      .lt('date', '2025-11-01');
      
    if (oct2025ReceiptsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ–∫–æ–≤ –∑–∞ –æ–∫—Ç—è–±—Ä—å 2025:', oct2025ReceiptsError);
      return;
    }
    
    console.log('‚úÖ –ß–µ–∫–æ–≤ –∑–∞ –æ–∫—Ç—è–±—Ä—å 2025:', oct2025Receipts.length);
    if (oct2025Receipts.length === 0) {
      console.log('‚ÑπÔ∏è  –≠—Ç–æ –æ–±—ä—è—Å–Ω—è–µ—Ç, –ø–æ—á–µ–º—É –Ω–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ –æ–∫—Ç—è–±—Ä—å 2025');
    }
    
    console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìù –í—ã–≤–æ–¥—ã:');
    console.log('- –í –±–∞–∑–µ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –∑–∞ 2024 –≥–æ–¥');
    console.log('- –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –æ–∫—Ç—è–±—Ä—å 2025 –≥–æ–¥–∞');
    console.log('- –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω—É–ª–∏ –¥–ª—è –º–µ—Å—è—Ü–µ–≤ –±–µ–∑ –¥–∞–Ω–Ω—ã—Ö');
    console.log('- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –æ—à–∏–±–∫–∏ undefined –≤ –ª–æ–≥–∞—Ö');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

testStatsFix().catch(console.error);
