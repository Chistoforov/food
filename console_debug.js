/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å —É–¥–∞–ª–µ–Ω–∏–µ–º —á–µ–∫–æ–≤
 * 
 * –ò–ù–°–¢–†–£–ö–¶–ò–Ø:
 * 1. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)
 * 2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥
 * 3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: debugDeleteReceipt()
 */

async function debugDeleteReceipt() {
    console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É —É–¥–∞–ª–µ–Ω–∏—è —á–µ–∫–æ–≤...');
    
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    console.log('\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è...');
    const SUPABASE_URL = import.meta.env?.VITE_SUPABASE_URL;
    const SUPABASE_KEY = import.meta.env?.VITE_SUPABASE_ANON_KEY;
    
    if (!SUPABASE_URL) {
        console.error('‚ùå VITE_SUPABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env.local –∏–ª–∏ .env');
        return;
    }
    
    if (!SUPABASE_KEY) {
        console.error('‚ùå VITE_SUPABASE_ANON_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env.local –∏–ª–∏ .env');
        return;
    }
    
    console.log('‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã');
    console.log('üì° URL:', SUPABASE_URL);
    console.log('üîë Key:', SUPABASE_KEY.substring(0, 20) + '...');
    
    // 2. –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
    console.log('\n2Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase...');
    let supabase;
    try {
        const { createClient } = await import('@supabase/supabase-js');
        supabase = createClient(SUPABASE_URL, SUPABASE_KEY);
        console.log('‚úÖ –ö–ª–∏–µ–Ω—Ç Supabase —Å–æ–∑–¥–∞–Ω');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞:', error);
        return;
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î...');
    try {
        const { data, error } = await supabase.from('families').select('count').limit(1);
        if (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error);
            return;
        }
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —Ä–∞–±–æ—Ç–∞–µ—Ç');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error);
        return;
    }
    
    // 4. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–µ–∫–æ–≤
    console.log('\n4Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–µ–∫–æ–≤...');
    const { data: receipts, error: receiptsError } = await supabase
        .from('receipts')
        .select('*')
        .eq('family_id', 1)
        .order('date', { ascending: false });
    
    if (receiptsError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —á–µ–∫–æ–≤:', receiptsError);
        return;
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —á–µ–∫–æ–≤: ${receipts?.length || 0}`);
    if (receipts && receipts.length > 0) {
        console.table(receipts.map(r => ({
            id: r.id,
            date: r.date,
            total: r.total_amount,
            items: r.items_count
        })));
    }
    
    if (!receipts || receipts.length === 0) {
        console.log('‚ö†Ô∏è –ù–µ—Ç —á–µ–∫–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –°–æ–∑–¥–∞–π—Ç–µ —á–µ–∫ —Å–Ω–∞—á–∞–ª–∞.');
        return;
    }
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º RLS –ø–æ–ª–∏—Ç–∏–∫–∏ (–ø—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —á–µ–∫)
    console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º RLS –ø–æ–ª–∏—Ç–∏–∫–∏...');
    const testReceipt = receipts[0];
    console.log(`üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —á–µ–∫–∞ #${testReceipt.id}...`);
    
    try {
        // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
        const { data: relatedHistory } = await supabase
            .from('product_history')
            .select('id')
            .eq('receipt_id', testReceipt.id);
        
        console.log(`üìä –°–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π product_history: ${relatedHistory?.length || 0}`);
        
        // –ü—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å —á–µ–∫
        const { error: deleteError } = await supabase
            .from('receipts')
            .delete()
            .eq('id', testReceipt.id);
        
        if (deleteError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:', deleteError);
            
            if (deleteError.message.includes('policy') || deleteError.message.includes('RLS')) {
                console.log('\nüí° –ü–†–û–ë–õ–ï–ú–ê –ù–ê–ô–î–ï–ù–ê! RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.');
                console.log('üîß –†–ï–®–ï–ù–ò–ï:');
                console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard');
                console.log('2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ SQL Editor');
                console.log('3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ —Ñ–∞–π–ª–∞ setup_rls_policies.sql');
                console.log('4. –ò–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç SQL:');
                console.log(`
ALTER TABLE receipts ENABLE ROW LEVEL SECURITY;
ALTER TABLE product_history ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Allow all operations on receipts" ON receipts USING (true);
CREATE POLICY "Allow all operations on product_history" ON product_history USING (true);
                `);
            }
            return;
        }
        
        console.log('‚úÖ –ß–µ–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –ë–î!');
        
        // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —á–µ–∫ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω
        console.log('\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —á–µ–∫ —É–¥–∞–ª–µ–Ω...');
        const { data: checkReceipt, error: checkError } = await supabase
            .from('receipts')
            .select('id')
            .eq('id', testReceipt.id)
            .single();
        
        if (checkError || !checkReceipt) {
            console.log('‚úÖ –ß–µ–∫ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –ë–î!');
            console.log('üéâ –£–î–ê–õ–ï–ù–ò–ï –†–ê–ë–û–¢–ê–ï–¢! –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.');
        } else {
            console.log('‚ùå –ß–µ–∫ –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î!');
            console.log('üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
            console.log('   - RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
            console.log('   - –ü—Ä–æ–±–ª–µ–º–∞ —Å CASCADE —É–¥–∞–ª–µ–Ω–∏–µ–º');
            console.log('   - –û—à–∏–±–∫–∞ –≤ —Ç—Ä–∏–≥–≥–µ—Ä–∞—Ö –ë–î');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    }
    
    console.log('\nüéØ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê');
    console.log('üìù –ï—Å–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ SQL-—Å–∫—Ä–∏–ø—Ç –∏–∑ setup_rls_policies.sql');
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é
window.debugDeleteReceipt = debugDeleteReceipt;

console.log('‚úÖ –°–∫—Ä–∏–ø—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω!');
console.log('üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: debugDeleteReceipt()');
